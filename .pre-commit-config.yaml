fail_fast: true
default_install_hook_types: [pre-commit, post-commit]
repos:
  - repo: https://github.com/andreoliwa/nitpick
    rev: "v0.33.2"
    hooks:
      - id: nitpick
  - repo: https://github.com/python-poetry/poetry
    rev: 1.5.0
    hooks:
      - id: poetry-lock
        args: ["--check"]
        files: "(pyproject.toml|poetry.lock)"

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v3.0.0-alpha.9-for-vscode"
    hooks:
      - id: prettier
        stages:
          - commit
        additional_dependencies:
          - prettier
          - prettier-plugin-toml
          - "@prettier/plugin-xml"
          - prettier-plugin-sh
        exclude: ^(.idea/.*|CHANGELOG.md|template.yaml)
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
  - repo: https://github.com/ambv/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-toml
      - id: check-yaml
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: "[CHANGELOG.md]"
      - id: mixed-line-ending
        args:
          - --fix=auto
      - id: pretty-format-json
        args:
          - --autofix
          - --indent=4
          - --no-sort-keys
        exclude: "[inputs.json|syntax_error.json]"
      - id: trailing-whitespace
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-mock-methods
      - id: python-no-log-warn
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.7.0
    hooks:
      - id: pyupgrade
        args: [--py37-plus]
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args:
          - --config=.config/.flake8
        additional_dependencies:
          - flake8-bugbear>=19.3.0
          - flake8-builtins>=1.4.1
          - flake8-commas>=2.0.0
          - flake8-comprehensions>=2.1.0
          - flake8-debugger>=3.1.0
          - flake8-pep3101>=1.2.1
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        additional_dependencies:
          - bandit[toml]
        args:
          - -c
          - pyproject.toml
          - -f
          - custom
          - -q
          - --msg-template
          - "{abspath}:{line}: {test_id}: Severe-{severity}/Conf-{confidence}: {msg}"
  - repo: https://github.com/domdfcoding/flake2lint
    rev: v0.4.3
    hooks:
      - id: flake2lint
  - repo: https://github.com/mumblepins/dep_checker
    rev: v0.7.1
    hooks:
      - id: dep_checker
        args:
          - --req-file
          - ../pyproject.toml
          - -d
          - src
          - template_python_library
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: "v1.4.0"
    hooks:
      - id: mypy
        args: ["--config-file", "pyproject.toml"]
        files: '^(src/.*|[^/]*)\.py$'
        additional_dependencies:
          - types-requests
          - pydantic
          - html2text
          - boto3-stubs
          - pytest-stub
  - repo: local
    hooks:
      - id: pylint
        name: pylint
        entry: >
          poetry run
          pylint
        language: system
        types: [python]
        args: ["-rn", "-sn", "--extension-pkg-whitelist=pydantic", "--rcfile=.config/.pylintrc"]
      - id: pytest-local
        name: pytest-local
        description: Run pytest in the local virtualenv
        stages: [manual]
        entry: >
          poetry run pytest
          -n 4
          --dist worksteal
          --reruns 3
          --verbose
          --cov
          --cov-report=html --cov-report=term --cov-report=xml
          --junitxml=junit.xml
        language: system
        pass_filenames: false
        always_run: true
        types: [python]
        verbose: true
  - repo: local
    hooks:
      - id: gitchangelog
        language: system
        always_run: true
        pass_filenames: false
        name: Generate changelog
        entry: poetry run bash -c "GITCHANGELOG_CONFIG_FILENAME='.config/.gitchangelog.rc'
          gitchangelog > CHANGELOG.md"
        stages: [post-commit]
